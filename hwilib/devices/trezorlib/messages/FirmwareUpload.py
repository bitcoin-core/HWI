# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p


class FirmwareUpload(p.MessageType):
    MESSAGE_WIRE_TYPE = 7

    def __init__(
        self,
        payload: bytes = None,
        hash: bytes = None,
    ) -> None:
        self.payload = payload
        self.hash = hash

    @classmethod
    def get_fields(cls):
        return {
            1: ('payload', p.BytesType, 0),  # required
            2: ('hash', p.BytesType, 0),
        }

class FirmwareUploadKeepkey(p.MessageType):
    MESSAGE_WIRE_TYPE = 7

    def __init__(
        self,
        payload: bytes = None,
        hash: bytes = None,
    ) -> None:
        self.payload = payload
        self.hash = hash

    @classmethod
    def get_fields(cls):
        return {
            1: ('hash', p.BytesType, 0),
            2: ('payload', p.BytesType, 0),
        }
